#Documentation de toutes les propriétés
# https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html

#configuration du port d'écoute du serveur Tomcat
server.port=8080
frontapp.url=http://localhost:4200

#logging.file.name=app.log
#logging.logback.rollingpolicy.file-name-pattern=C:/tempBidon/app-%d{yyyy-MM-dd}.%i.log
#logging.logback.rollingpolicy.max-file-size=10MB
#logging.logback.rollingpolicy.total-size-cap=150MB
#logging.logback.rollingpolicy.max-history=15

logging.level.org.springframework.web=info
logging.level.org.springframework.core=info
logging.level.org.springframework.beans=info
logging.level.org.springframework.context=info
logging.level.org.hibernate=info
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.type=info
logging.level.org.hibernate.tool.hbm2ddl=info
logging.level.org.hibernate.jdbc=info
logging.level.org.hibernate.transaction=info
logging.level.org.hibernate.cache=TRACE
logging.level.net.sf.ehcache=DEBUG
logging.level.net.sf.ehcache.hibernate=DEBUG

storage.folder=logs

cors.allowed-urls=*
#cors.allowed-urls=https://dawan.fr,https://app.dawan.fr

#File weight
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=50MB

#autoriser des caractères dans la req
server.tomcat.relaxed-query-chars=|,{,},[,]
server.tomcat.relaxed-path-chars=|,{,},[,]

#configuration de la datasource
spring.jpa.generate-ddl=true  
# si spring <3 => spring.datasource.initialization-mode=always
spring.sql.init.mode=always
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/training
spring.datasource.username=onizuka
spring.datasource.password=secret

#config de JPA/Hibernate

#dialect : classe permettant de traduire les req JP-QL vers le SQL spécifique au SGBD utilis
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#Stratégie utilisée pour générer les tables en Bdd
spring.jpa.hibernate.ddl-auto=update

#mettre à false en production (optimisation)
spring.jpa.show-sql=true

#printing parameter values in order
#logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.orm.jdbc.bind=trace


# Statistiques sur la req SQL envoyée
#spring.jpa.properties.hibernate.generate_statistics=true

spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
spring.jpa.properties.hibernate.allow_update_outside_transaction=true

#on peut exporter les req de création du schéma dans un fichier .sql
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql


#JavaMail config
spring.mail.host=mail.dawan.fr

spring.mail.port=465
spring.mail.properties.mail.smtp.socketFactory.port=465

spring.mail.username=YOUR_MAIL
spring.mail.password=YOUR_PWD

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.from=noreply@dawan.fr
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

#Actuator : pour inclure l'ensemble des points d'entrée
management.endpoints.web.exposure.include=*

#config ehCache
cache.jcache.config=classpath:ehcache.xml



