package fr.dawan.training.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;

import fr.dawan.training.dto.ProductDto;
import fr.dawan.training.services.IFileService;
import fr.dawan.training.services.IProductService;

@RestController
@RequestMapping("/api/products")
public class ProductController extends GenericController<ProductDto, Long> {

	@Autowired
	private IFileService fileService;
	
	@Autowired
	private ObjectMapper objectMapper;

	private IProductService service;

	@Autowired
	public ProductController(IProductService service) {
		super(service);
		this.service = service;
	}

	// Implement other methods
	@PostMapping(value = "/upload-image/{productId}", consumes = "multipart/form-data", produces = {
			"application/json" })
	public ResponseEntity<ProductDto> uploadImage(@RequestParam("file") MultipartFile file,
			@PathVariable("productId") long id) throws Exception {
		String filePath = "/" + id + "-" + file.getOriginalFilename();
		fileService.saveFile(filePath, file.getBytes());

		ProductDto dto = service.getById(id);
		dto.setImagePath(filePath);
		dto = service.saveOrUpdate(dto);
		return ResponseEntity.ok(dto);
	}

	
	@PostMapping(value="/save-with-image", consumes = "multipart/form-data", produces = "application/json")
	public ResponseEntity<ProductDto> saveProduct(@RequestParam("product") String productStr,
			@RequestPart("file") MultipartFile file) throws Exception {

		ProductDto dto = objectMapper.readValue(productStr, ProductDto.class);

		// insert prod into DB - id autogenerated
		dto = service.saveOrUpdate(dto); //async

		String filePath = "/" + dto.getId() + "-" + file.getOriginalFilename();
		fileService.saveFile(filePath, file.getBytes());

		dto.setImagePath(filePath);
		dto = service.saveOrUpdate(dto);
		
		return ResponseEntity.ok(dto);
	}

	

}
