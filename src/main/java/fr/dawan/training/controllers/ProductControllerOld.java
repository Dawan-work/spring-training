package fr.dawan.training.controllers;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.databind.ObjectMapper;

import fr.dawan.training.entities.Product;
import fr.dawan.training.repositories.ProductRepository;

@RestController
@RequestMapping("/api/v1/products")
public class ProductControllerOld {

	@Value("${storage.folder}") // Value permet de récupérer la valeur d'une propriété
	private String storageFolder;

	@Autowired
	private ObjectMapper objectMapper;
	
	@Autowired
	private ProductRepository productRepository;
	

	// POST : /api/products/upload-image/1
	@PostMapping(value = "/upload-image/{productId}", consumes = "multipart/form-data", produces = {
			"application/json" })
	public ResponseEntity<Product> uploadImage(@RequestParam("file") MultipartFile file,
			@PathVariable("productId") long id) throws Exception {
		String filePath = "/" + id + "-" + file.getOriginalFilename();
		saveFile(filePath, file.getBytes());

		Product p = new Product();
		p.setId(id);
		p.setImagePath(filePath);
		// ...
		return ResponseEntity.ok(p);
	}

	// POST : fichier image + produit (saveWithImage)
	@PostMapping(consumes = "multipart/form-data", produces = "application/json")
	public ResponseEntity<Product> saveProduct(@RequestParam("product") String productStr,
			@RequestPart("file") MultipartFile file) throws Exception {

		Product prod = objectMapper.readValue(productStr, Product.class);

		// insert prod into DB - id autogenerated

		String filePath = "/" + prod.getId() + "-" + file.getOriginalFilename();
		saveFile(filePath, file.getBytes());

		prod.setImagePath(filePath);

		// Update prod to save imagepath

		return ResponseEntity.ok(prod);
	}

	private void saveFile(String filePath, byte[] bytes) throws Exception {
		filePath = filePath.replaceAll(" ", "-"); // remplacer les espaces par tiret
		filePath = filePath.replaceAll("[^\\.A-Za-z0-9_]", ""); // remplacer les caractères non alphanumériques par rien
		// regex : \w : a word character => [a-zA-Z_0-9]
		// \W : a non-word character
		File f = new File(storageFolder + filePath);
		try (BufferedOutputStream bos = new BufferedOutputStream(new FileOutputStream(f))) {
			bos.write(bytes);
		}
	}

}
